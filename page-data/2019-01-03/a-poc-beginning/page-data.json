{"componentChunkName":"component---src-templates-blog-post-js","path":"/2019-01-03/a-poc-beginning/","result":{"data":{"site":{"siteMetadata":{"title":"The Coding Disappointment"}},"markdownRemark":{"id":"240c0e60-86c4-57ee-ae03-c877db8f128b","excerpt":"Do note that starting from just a PoC is not always possible for every scenario and every project, but a starting point to see if something can work or not is a big benefit nonetheless. PoC Meme A “Proof of Concept” (PoC) is a term that most…","timeToRead":2,"html":"<p><em>Do note that starting from just a PoC is not always possible for every scenario and every project, but a starting point to see if something can work or not is a big benefit nonetheless.</em></p>\n<p><img src=\"https://memegenerator.net/img/instances/67101634/brace-yourselves-a-proof-of-concept-is-coming.jpg\" alt=\"PoC Meme\"></p>\n<p>A “Proof of Concept” (PoC) is a term that most programmers are familiar with. If not, there’s multiple articles online that describe a concept (including <a href=\"https://en.wikipedia.org/wiki/Proof_of_concept\">Wikipedia</a>), and many that describe the benefits, this being one of them.</p>\n<p>A PoC, while not always possible or required to create before starting a project, can provide a ton of benefits to a developer in figuring out their project, from a high-level design and requirements down to even low-level component design. The obvious benefit is that as a PoC is built, the requirements of the application become well understood and a clear higher-level design can be crafted based on experience from building the PoC. This experience can also benefit low-level component design, since understanding how the software has to function can help figure out how components have to be made to ensure a high enough quality for the project is maintained, which is great for reducing your <strong><em>WTFs/min</em></strong>.</p>\n<p><a href=\"http://www.osnews.com/story/19266/WTFs_m\"><img src=\"https://blog.codinghorror.com/content/images/uploads/2009/02/6a0120a85dcdae970b012877707a45970c-pi.png\" alt=\"XKCD - Donal Knuth\"></a></p>\n<p>PoCs can also help reduce development time over the long run, since this experience and understanding can help speeden development as fewer changes and mistakes are made throughout the development lifecycle. If a PoC is built well enough from the ground up, iterations of that PoC can be done to further speeden development and prevent the need to rebuild from scratch.</p>\n<p>The dependencies required to build the project can also be locked with the help of a PoC, since it is only during the development of the product that all the required dependencies of it can be fully realised. Otherwise, new dependencies may pop up mid-development, and integration of them can be costly since they may require a refactor.</p>\n<p>PoCs can also help people have a better understanding of the idea and product the PoC represents, which allows for early feedback. This feedback is crucial for development, since it’s early enough in the development stage that implementing that feedback can be done relatively easily and incorporated within the design itself. The early feedback also helps bring a much needed perspective from potential users, who can correct an improper understanding of a product or idea, which can allow for early course correction.</p>\n<p>And the most important benefit of a PoC is a part of the name itself - a proof that the idea works and is viable. Without a clear understanding of whether a product can work, the future of it is uncertain, and to determine that a PoC is highly beneficial. A PoC doesn’t have to be the final product, it just has to show that the final product is possible. A PoC isn’t a prototype either, since a prototype just showcases certain features, while a PoC should show the overall concept and idea of the product as a whole. The fact that the PoC is built is enough to show the potential of the product, and without that knowledge being able to sell an idea becomes significantly harder.</p>","frontmatter":{"title":"A PoC Beginning","date":"January 02, 2019"}}},"pageContext":{"slug":"/2019-01-03/a-poc-beginning/","previous":{"fields":{"slug":"/2017/05/23/create-to-maintain/"},"frontmatter":{"title":"Create To Maintain"}},"next":null}}}